import { Plugin, ComputedRef } from 'vue';
import { ReplacementsInterface } from './interfaces/replacements';
/**
 * Checks if the language is loaded.
 */
export declare function isLoaded(lang?: string): boolean;
/**
 * Loads the language file.
 */
export declare function loadLanguageAsync(lang: string): Promise<string | void>;
/**
 * Get the translation for the given key.
 */
export declare function trans(key: string, replacements?: ReplacementsInterface): string;
/**
 * Get the translation for the given key and watch for any changes.
 */
export declare function wTrans(key: string, replacements?: ReplacementsInterface): ComputedRef<string>;
/**
 * Translates the given message based on a count.
 */
export declare function transChoice(key: string, number: number, replacements?: ReplacementsInterface): string;
/**
 * Translates the given message based on a count and watch for changes.
 */
export declare function wTransChoice(key: string, number: number, replacements?: ReplacementsInterface): ComputedRef<string>;
/**
 * Returns the current active language.
 */
export declare function getActiveLanguage(): string;
/**
 * Resets all the data stored in memory.
 */
export declare const reset: () => void;
/**
 * Alias to `transChoice` to mimic the same function name from Laravel Framework.
 */
export declare const trans_choice: typeof transChoice;
/**
 * The Vue Plugin. to be used on your Vue app like this: `app.use(i18nVue)`
 */
export declare const i18nVue: Plugin;
