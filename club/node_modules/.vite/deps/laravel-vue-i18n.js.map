{
  "version": 3,
  "sources": ["../../laravel-vue-i18n/src/utils/get-plural-index.ts", "../../laravel-vue-i18n/src/pluralization.ts", "../../laravel-vue-i18n/src/utils/avoid-exceptions.ts", "../../laravel-vue-i18n/src/index.ts"],
  "sourcesContent": ["/**\n * Get the index to use for pluralization.\n *\n * The plural rules are derived from code of the Zend Framework (2010-09-25), which\n * is subject to the new BSD license (https://framework.zend.com/license)\n * Copyright (c) 2005-2010 - Zend Technologies USA Inc. (http://www.zend.com)\n */\nexport function getPluralIndex(lang: string, number: number): number {\n  switch (lang.replace('_', '-')) {\n    case 'af':\n    case 'af-ZA':\n    case 'bn':\n    case 'bn-BD':\n    case 'bn-IN':\n    case 'bg':\n    case 'bg-BG':\n    case 'ca':\n    case 'ca-AD':\n    case 'ca-ES':\n    case 'ca-FR':\n    case 'ca-IT':\n    case 'da':\n    case 'da-DK':\n    case 'de':\n    case 'de-AT':\n    case 'de-BE':\n    case 'de-CH':\n    case 'de-DE':\n    case 'de-LI':\n    case 'de-LU':\n    case 'el':\n    case 'el-CY':\n    case 'el-GR':\n    case 'en':\n    case 'en-AG':\n    case 'en-AU':\n    case 'en-BW':\n    case 'en-CA':\n    case 'en-DK':\n    case 'en-GB':\n    case 'en-HK':\n    case 'en-IE':\n    case 'en-IN':\n    case 'en-NG':\n    case 'en-NZ':\n    case 'en-PH':\n    case 'en-SG':\n    case 'en-US':\n    case 'en-ZA':\n    case 'en-ZM':\n    case 'en-ZW':\n    case 'eo':\n    case 'eo-US':\n    case 'es':\n    case 'es-AR':\n    case 'es-BO':\n    case 'es-CL':\n    case 'es-CO':\n    case 'es-CR':\n    case 'es-CU':\n    case 'es-DO':\n    case 'es-EC':\n    case 'es-ES':\n    case 'es-GT':\n    case 'es-HN':\n    case 'es-MX':\n    case 'es-NI':\n    case 'es-PA':\n    case 'es-PE':\n    case 'es-PR':\n    case 'es-PY':\n    case 'es-SV':\n    case 'es-US':\n    case 'es-UY':\n    case 'es-VE':\n    case 'et':\n    case 'et-EE':\n    case 'eu':\n    case 'eu-ES':\n    case 'eu-FR':\n    case 'fa':\n    case 'fa-IR':\n    case 'fi':\n    case 'fi-FI':\n    case 'fo':\n    case 'fo-FO':\n    case 'fur':\n    case 'fur-IT':\n    case 'fy':\n    case 'fy-DE':\n    case 'fy-NL':\n    case 'gl':\n    case 'gl-ES':\n    case 'gu':\n    case 'gu-IN':\n    case 'ha':\n    case 'ha-NG':\n    case 'he':\n    case 'he-IL':\n    case 'hu':\n    case 'hu-HU':\n    case 'is':\n    case 'is-IS':\n    case 'it':\n    case 'it-CH':\n    case 'it-IT':\n    case 'ku':\n    case 'ku-TR':\n    case 'lb':\n    case 'lb-LU':\n    case 'ml':\n    case 'ml-IN':\n    case 'mn':\n    case 'mn-MN':\n    case 'mr':\n    case 'mr-IN':\n    case 'nah':\n    case 'nb':\n    case 'nb-NO':\n    case 'ne':\n    case 'ne-NP':\n    case 'nl':\n    case 'nl-AW':\n    case 'nl-BE':\n    case 'nl-NL':\n    case 'nn':\n    case 'nn-NO':\n    case 'no':\n    case 'om':\n    case 'om-ET':\n    case 'om-KE':\n    case 'or':\n    case 'or-IN':\n    case 'pa':\n    case 'pa-IN':\n    case 'pa-PK':\n    case 'pap':\n    case 'pap-AN':\n    case 'pap-AW':\n    case 'pap-CW':\n    case 'ps':\n    case 'ps-AF':\n    case 'pt':\n    case 'pt-BR':\n    case 'pt-PT':\n    case 'so':\n    case 'so-DJ':\n    case 'so-ET':\n    case 'so-KE':\n    case 'so-SO':\n    case 'sq':\n    case 'sq-AL':\n    case 'sq-MK':\n    case 'sv':\n    case 'sv-FI':\n    case 'sv-SE':\n    case 'sw':\n    case 'sw-KE':\n    case 'sw-TZ':\n    case 'ta':\n    case 'ta-IN':\n    case 'ta-LK':\n    case 'te':\n    case 'te-IN':\n    case 'tk':\n    case 'tk-TM':\n    case 'ur':\n    case 'ur-IN':\n    case 'ur-PK':\n    case 'zu':\n    case 'zu-ZA':\n      return number === 1 ? 0 : 1\n    case 'am':\n    case 'am-ET':\n    case 'bh':\n    case 'fil':\n    case 'fil-PH':\n    case 'fr':\n    case 'fr-BE':\n    case 'fr-CA':\n    case 'fr-CH':\n    case 'fr-FR':\n    case 'fr-LU':\n    case 'gun':\n    case 'hi':\n    case 'hi-IN':\n    case 'hy':\n    case 'hy-AM':\n    case 'ln':\n    case 'ln-CD':\n    case 'mg':\n    case 'mg-MG':\n    case 'nso':\n    case 'nso-ZA':\n    case 'ti':\n    case 'ti-ER':\n    case 'ti-ET':\n    case 'wa':\n    case 'wa-BE':\n    case 'xbr':\n      return number === 0 || number === 1 ? 0 : 1\n    case 'be':\n    case 'be-BY':\n    case 'bs':\n    case 'bs-BA':\n    case 'hr':\n    case 'hr-HR':\n    case 'ru':\n    case 'ru-RU':\n    case 'ru-UA':\n    case 'sr':\n    case 'sr-ME':\n    case 'sr-RS':\n    case 'uk':\n    case 'uk-UA':\n      return number % 10 == 1 && number % 100 != 11\n        ? 0\n        : number % 10 >= 2 && number % 10 <= 4 && (number % 100 < 10 || number % 100 >= 20)\n        ? 1\n        : 2\n    case 'cs':\n    case 'cs-CZ':\n    case 'sk':\n    case 'sk-SK':\n      return number == 1 ? 0 : number >= 2 && number <= 4 ? 1 : 2\n    case 'ga':\n    case 'ga-IE':\n      return number == 1 ? 0 : number == 2 ? 1 : 2\n    case 'lt':\n    case 'lt-LT':\n      return number % 10 == 1 && number % 100 != 11\n        ? 0\n        : number % 10 >= 2 && (number % 100 < 10 || number % 100 >= 20)\n        ? 1\n        : 2\n    case 'sl':\n    case 'sl-SI':\n      return number % 100 == 1 ? 0 : number % 100 == 2 ? 1 : number % 100 == 3 || number % 100 == 4 ? 2 : 3\n    case 'mk':\n    case 'mk-MK':\n      return number % 10 == 1 ? 0 : 1\n    case 'mt':\n    case 'mt-MT':\n      return number == 1\n        ? 0\n        : number == 0 || (number % 100 > 1 && number % 100 < 11)\n        ? 1\n        : number % 100 > 10 && number % 100 < 20\n        ? 2\n        : 3\n    case 'lv':\n    case 'lv-LV':\n      return number == 0 ? 0 : number % 10 == 1 && number % 100 != 11 ? 1 : 2\n    case 'pl':\n    case 'pl-PL':\n      return number == 1 ? 0 : number % 10 >= 2 && number % 10 <= 4 && (number % 100 < 12 || number % 100 > 14) ? 1 : 2\n    case 'cy':\n    case 'cy-GB':\n      return number == 1 ? 0 : number == 2 ? 1 : number == 8 || number == 11 ? 2 : 3\n    case 'ro':\n    case 'ro-RO':\n      return number == 1 ? 0 : number == 0 || (number % 100 > 0 && number % 100 < 20) ? 1 : 2\n    case 'ar':\n    case 'ar-AE':\n    case 'ar-BH':\n    case 'ar-DZ':\n    case 'ar-EG':\n    case 'ar-IN':\n    case 'ar-IQ':\n    case 'ar-JO':\n    case 'ar-KW':\n    case 'ar-LB':\n    case 'ar-LY':\n    case 'ar-MA':\n    case 'ar-OM':\n    case 'ar-QA':\n    case 'ar-SA':\n    case 'ar-SD':\n    case 'ar-SS':\n    case 'ar-SY':\n    case 'ar-TN':\n    case 'ar-YE':\n      return number == 0\n        ? 0\n        : number == 1\n        ? 1\n        : number == 2\n        ? 2\n        : number % 100 >= 3 && number % 100 <= 10\n        ? 3\n        : number % 100 >= 11 && number % 100 <= 99\n        ? 4\n        : 5\n    default:\n      return 0\n  }\n}\n", "import { getPluralIndex } from './utils/get-plural-index'\n\n/**\n * Select a proper translation string based on the given number.\n */\nexport function choose(message: string, number: number, lang: string): string {\n  let segments = message.split('|')\n  const extracted = extract(segments, number)\n\n  if (extracted !== null) {\n    return extracted.trim()\n  }\n\n  segments = stripConditions(segments)\n  const pluralIndex = getPluralIndex(lang, number)\n\n  if (segments.length === 1 || !segments[pluralIndex]) {\n    return segments[0]\n  }\n\n  return segments[pluralIndex]\n}\n\n/**\n * Extract a translation string using inline conditions.\n */\nfunction extract(segments: string[], number: number): string | null {\n  for (const part of segments) {\n    let line = extractFromString(part, number)\n\n    if (line !== null) {\n      return line\n    }\n  }\n\n  return null\n}\n\n/**\n * Get the translation string if the condition matches.\n */\nfunction extractFromString(part: string, number: number): string | null {\n  const matches = part.match(/^[\\{\\[]([^\\[\\]\\{\\}]*)[\\}\\]](.*)/s) || []\n  if (matches.length !== 3) {\n    return null\n  }\n\n  const condition = matches[1]\n  const value = matches[2]\n\n  if (condition.includes(',')) {\n    let [from, to] = condition.split(',')\n\n    if (to === '*' && number >= parseFloat(from)) {\n      return value\n    } else if (from === '*' && number <= parseFloat(to)) {\n      return value\n    } else if (number >= parseFloat(from) && number <= parseFloat(to)) {\n      return value\n    }\n  }\n\n  return parseFloat(condition) === number ? value : null\n}\n\n/**\n * Strip the inline conditions from each segment, just leaving the text.\n */\nfunction stripConditions(segments: string[]): string[] {\n  return segments.map((part) => part.replace(/^[\\{\\[]([^\\[\\]\\{\\}]*)[\\}\\]]/, ''))\n}\n", "export const avoidException = (callback: Function, param, defaults = {}) => {\n  try {\n    return callback(param)\n  } catch {\n    return defaults\n  }\n}\n\nexport const avoidExceptionOnPromise = async (promise, defaults = {}) => {\n  try {\n    return (await promise).default || defaults\n  } catch (e) {\n    return defaults\n  }\n}\n", "import { reactive, Plugin, computed, ComputedRef } from 'vue'\nimport { OptionsInterface } from './interfaces/options'\nimport { LanguageInterface } from './interfaces/language'\nimport { LanguageJsonFileInterface } from './interfaces/language-json-file'\nimport { ReplacementsInterface } from './interfaces/replacements'\nimport { choose } from './pluralization'\nimport { avoidExceptionOnPromise, avoidException } from './utils/avoid-exceptions'\n\nconst isServer = typeof window === 'undefined'\n\n/**\n * The default options, for the plugin.\n */\nconst DEFAULT_OPTIONS: OptionsInterface = {\n  lang: !isServer && document.documentElement.lang ? document.documentElement.lang.replace('-', '_') : 'en',\n  resolve: (lang: string) => new Promise((resolve) => resolve({ default: {} }))\n}\n\n/**\n * Stores the current options.\n */\nlet options: OptionsInterface = DEFAULT_OPTIONS\n\n/**\n * Stores the loaded languages.\n */\nlet loaded: LanguageInterface[] = []\n\n/**\n * The active messages to use.\n */\nconst activeMessages: object = reactive({})\n\n/**\n * Checks if the language is loaded.\n */\nexport function isLoaded(lang?: string): boolean {\n  lang ??= getActiveLanguage()\n  lang = lang.replace('-', '_')\n\n  return loaded.some((row) => row.lang === lang)\n}\n\n/**\n * Loads the language file.\n */\nexport function loadLanguageAsync(lang: string): Promise<string | void> {\n  lang = lang.replace('-', '_')\n\n  const loadedLang: LanguageInterface = loaded.find((row) => row.lang === lang)\n\n  if (loadedLang) {\n    return Promise.resolve(setLanguage(loadedLang))\n  }\n\n  return resolveLang(options.resolve, lang).then(({ default: messages }) => {\n    const data: LanguageInterface = { lang, messages }\n    loaded.push(data)\n    return setLanguage(data)\n  })\n}\n\n/**\n * Get the translation for the given key.\n */\nexport function trans(key: string, replacements: ReplacementsInterface = {}): string {\n  return wTrans(key, replacements).value\n}\n\n/**\n * Get the translation for the given key and watch for any changes.\n */\nexport function wTrans(key: string, replacements: ReplacementsInterface = {}): ComputedRef<string> {\n  if (!activeMessages[key]) {\n    activeMessages[key] = key\n  }\n\n  return computed(() => makeReplacements(activeMessages[key], replacements))\n}\n\n/**\n * Translates the given message based on a count.\n */\nexport function transChoice(key: string, number: number, replacements: ReplacementsInterface = {}): string {\n  return wTransChoice(key, number, replacements).value\n}\n\n/**\n * Translates the given message based on a count and watch for changes.\n */\nexport function wTransChoice(\n  key: string,\n  number: number,\n  replacements: ReplacementsInterface = {}\n): ComputedRef<string> {\n  const message = wTrans(key, replacements)\n\n  replacements.count = number.toString()\n\n  return computed(() => makeReplacements(choose(message.value, number, options.lang), replacements))\n}\n\n/**\n * Returns the current active language.\n */\nexport function getActiveLanguage(): string {\n  return options.lang\n}\n\n/**\n * Sets the language messages to the activeMessages.\n */\nfunction setLanguage({ lang, messages }: LanguageInterface): string {\n  if (!isServer) {\n    // When setting the HTML lang attribute, hyphen must be use instead of underscore.\n    document.documentElement.setAttribute('lang', lang.replace('_', '-'))\n  }\n\n  options.lang = lang\n\n  for (const [key, value] of Object.entries(messages)) {\n    activeMessages[key] = value\n  }\n\n  for (const [key] of Object.entries(activeMessages)) {\n    if (!messages[key]) {\n      activeMessages[key] = null\n    }\n  }\n\n  return lang\n}\n\n/**\n * It resolves the language file or data, from direct data, require or Promise.\n */\nasync function resolveLang(callable: Function, lang: string): Promise<LanguageJsonFileInterface> {\n  const hasPhpTranslations =\n    typeof process !== 'undefined' && process.env ? process.env.LARAVEL_VUE_I18N_HAS_PHP : false\n\n  let data = avoidException(callable, lang)\n\n  if (data instanceof Promise) {\n    if (hasPhpTranslations) {\n      const phpLang = await avoidExceptionOnPromise(callable(`php_${lang}`))\n      const jsonLang = await avoidExceptionOnPromise(data)\n\n      return new Promise((resolve) =>\n        resolve({\n          default: {\n            ...phpLang,\n            ...jsonLang\n          }\n        })\n      )\n    }\n\n    return new Promise(async (resolve) =>\n      resolve({\n        default: await avoidExceptionOnPromise(data)\n      })\n    )\n  }\n\n  if (hasPhpTranslations) {\n    return new Promise((resolve) =>\n      resolve({\n        default: {\n          ...data,\n          ...avoidException(callable, `php_${lang}`)\n        }\n      })\n    )\n  }\n\n  return new Promise((resolve) => resolve({ default: data }))\n}\n\n/**\n * Make the place-holder replacements on a line.\n */\nfunction makeReplacements(message: string, replacements?: ReplacementsInterface): string {\n  const capitalize = (s) => s.charAt(0).toUpperCase() + s.slice(1)\n\n  Object.entries(replacements || []).forEach(([key, value]) => {\n    value = value.toString()\n\n    message = message\n      .replace(`:${key}`, value)\n      .replace(`:${key.toUpperCase()}`, value.toUpperCase())\n      .replace(`:${capitalize(key)}`, capitalize(value))\n  })\n\n  return message\n}\n\n/**\n * Resets all the data stored in memory.\n */\nexport const reset = (): void => {\n  loaded = []\n  options = DEFAULT_OPTIONS\n\n  for (const [key] of Object.entries(activeMessages)) {\n    activeMessages[key] = null\n  }\n}\n\n/**\n * Alias to `transChoice` to mimic the same function name from Laravel Framework.\n */\nexport const trans_choice = transChoice\n\n/**\n * The Vue Plugin. to be used on your Vue app like this: `app.use(i18nVue)`\n */\nexport const i18nVue: Plugin = {\n  install: (app, currentOptions: OptionsInterface = {}) => {\n    options = { ...options, ...currentOptions }\n    app.config.globalProperties.$t = (key: string, replacements: ReplacementsInterface) => trans(key, replacements)\n    app.config.globalProperties.$tChoice = (key: string, number: number, replacements: ReplacementsInterface) =>\n      transChoice(key, number, replacements)\n    loadLanguageAsync(options.lang)\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;AAOA,aAAgB,eAAe,MAAc,QAAc;AACzD,ciBAAO,WAAW,IAAI,IAAI;QAC5B,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;AACH,iBAAO,WAAW,KAAK,WAAW,IAAI,IAAI;QAC5C,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;AACH,iBAAO,SAAS,MAAM,KAAK,SAAS,OAAO,KACvC,IACA,SAAS,MAAM,KAAK,SAAS,MAAM,MAAM,SAAS,MAAM,MAAM,SAAS,OAAO,MAC9E,IACA;QACN,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;AACH,iBAAO,UAAU,IAAI,IAAI,UAAU,KAAK,UAAU,IAAI,IAAI;QAC5D,KAAK;QACL,KAAK;AACH,iBAAO,UAAU,IAAI,IAAI,UAAU,IAAI,IAAI;QAC7C,KAAK;QACL,KAAK;AACH,iBAAO,SAAS,MAAM,KAAK,SAAS,OAAO,KACvC,IACA,SAAS,MAAM,MAAM,SAAS,MAAM,MAAM,SAAS,OAAO,MAC1D,IACA;QACN,KAAK;QACL,KAAK;AACH,iBAAO,SAAS,OAAO,IAAI,IAAI,SAAS,OAAO,IAAI,IAAI,SAAS,OAAO,KAAK,SAAS,OAAO,IAAI,IAAI;QACtG,KAAK;QACL,KAAK;AACH,iBAAO,SAAS,MAAM,IAAI,IAAI;QAChC,KAAK;QACL,KAAK;AACH,iBAAO,UAAU,IACb,IACA,UAAU,KAAM,SAAS,MAAM,KAAK,SAAS,MAAM,KACnD,IACA,SAAS,MAAM,MAAM,SAAS,MAAM,KACpC,IACA;QACN,KAAK;QACL,KAAK;AACH,iBAAO,UAAU,IAAI,IAAI,SAAS,MAAM,KAAK,SAAS,OAAO,KAAK,IAAI;QACxE,KAAK;QACL,KAAK;AACH,iBAAO,UAAU,IAAI,IAAI,SAAS,MAAM,KAAK,SAAS,MAAM,MAAM,SAAS,MAAM,MAAM,SAAS,MAAM,MAAM,IAAI;QAClH,KAAK;QACL,KAAK;AACH,iBAAO,UAAU,IAAI,IAAI,UAAU,IAAI,IAAI,UAAU,KAAK,UAAU,KAAK,IAAI;QAC/E,KAAK;QACL,KAAK;AACH,iBAAO,UAAU,IAAI,IAAI,UAAU,KAAM,SAAS,MAAM,KAAK,SAAS,MAAM,KAAM,IAAI;QACxF,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;AACH,iBAAO,UAAU,IACb,IACA,UAAU,IACV,IACA,UAAU,IACV,IACA,SAAS,OAAO,KAAK,SAAS,OAAO,KACrC,IACA,SAAS,OAAO,MAAM,SAAS,OAAO,KACtC,IACA;QACN;AACE,iBAAO;;IAEb;AAjSA,YAAA,iBAAA;;;;;;;;;;ACPA,QAAA,qBAAA;AAKA,aAAgB,OAAO,SAAiB,QAAgB,MAAY;AAClE,UAAI,WAAW,QAAQ,MAAM,GAAG;AAChC,YAAM,YAAY,QAAQ,UAAU,MAAM;AAE1C,UAAI,cAAc,MAAM;AACtB,eAAO,UAAU,KAAI;;AAGvB,iBAAW,gBAAgB,QAAQ;AACnC,YAAM,eAAc,GAAA,mBAAA,gBAAe,MAAM,MAAM;AAE/C,UAAI,SAAS,WAAW,KAAK,CAAC,SAAS,WAAW,GAAG;AACnD,eAAO,SAAS,CAAC;;AAGnB,aAAO,SAAS,WAAW;IAC7B;AAhBA,YAAA,SAAA;AAqBA,aAAS,QAAQ,UAAoB,QAAc;AACjD,iBAAW,QAAQ,UAAU;AAC3B,YAAI,OAAO,kBAAkB,MAAM,MAAM;AAEzC,YAAI,SAAS,MAAM;AACjB,iBAAO;;;AAIX,aAAO;IACT;AAKA,aAAS,kBAAkB,MAAc,QAAc;AACrD,YAAM,UAAU,KAAK,MAAM,kCAAkC,KAAK,CAAA;AAClE,UAAI,QAAQ,WAAW,GAAG;AACxB,eAAO;;AAGT,YAAM,YAAY,QAAQ,CAAC;AAC3B,YAAM,QAAQ,QAAQ,CAAC;AAEvB,UAAI,UAAU,SAAS,GAAG,GAAG;AAC3B,YAAI,CAAC,MAAM,EAAE,IAAI,UAAU,MAAM,GAAG;AAEpC,YAAI,OAAO,OAAO,UAAU,WAAW,IAAI,GAAG;AAC5C,iBAAO;mBACE,SAAS,OAAO,UAAU,WAAW,EAAE,GAAG;AACnD,iBAAO;mBACE,UAAU,WAAW,IAAI,KAAK,UAAU,WAAW,EAAE,GAAG;AACjE,iBAAO;;;AAIX,aAAO,WAAW,SAAS,MAAM,SAAS,QAAQ;IACpD;AAKA,aAAS,gBAAgB,UAAkB;AACzC,aAAO,SAAS,IAAI,CAAC,SAAS,KAAK,QAAQ,+BAA+B,EAAE,CAAC;IAC/E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtEO,QAAM,iBAAiB,CAAC,UAAoB,OAAO,WAAW,CAAA,MAAM;AACzE,UAAI;AACF,eAAO,SAAS,KAAK;eACrB,IAAM;AACN,eAAO;;IAEX;AANa,YAAA,iBAAc;AAQpB,QAAM,0BAA0B,CAAO,SAAS,WAAW,CAAA,MAAM,UAAA,QAAA,QAAA,QAAA,aAAA;AACtE,UAAI;AACF,gBAAQ,MAAM,SAAS,WAAW;eAC3B,GAAG;AACV,eAAO;;IAEX,CAAC;AANY,YAAA,0BAAuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRpC,QAAA,QAAA;AAKA,QAAA,kBAAA;AACA,QAAA,qBAAA;AAEA,QAAM,WAAW,OAAO,WAAW;AAKnC,QAAM,kBAAoC;MACxC,MAAM,CAAC,YAAY,SAAS,gBAAgB,OAAO,SAAS,gBAAgB,KAAK,QAAQ,KAAK,GAAG,IAAI;MACrG,SAAS,CAAC,SAAiB,IAAI,QAAQ,CAAC,YAAY,QAAQ,EAAE,SAAS,CAAA,EAAE,CAAE,CAAC;;AAM9E,QAAI,UAA4B;AAKhC,QAAI,SAA8B,CAAA;AAKlC,QAAM,kBAAyB,GAAA,MAAA,UAAS,CAAA,CAAE;AAK1C,aAAgB,SAAS,MAAa;AACpC,eAAI,QAAJ,SAAI,SAAJ,OAAA,OAAS,kBAAiB;AAC1B,aAAO,KAAK,QAAQ,KAAK,GAAG;AAE5B,aAAO,OAAO,KAAK,CAAC,QAAQ,IAAI,SAAS,IAAI;IAC/C;AALA,YAAA,WAAA;AAUA,aAAgB,kBAAkB,MAAY;AAC5C,aAAO,KAAK,QAAQ,KAAK,GAAG;AAE5B,YAAM,aAAgC,OAAO,KAAK,CAAC,QAAQ,IAAI,SAAS,IAAI;AAE5E,UAAI,YAAY;AACd,eAAO,QAAQ,QAAQ,YAAY,UAAU,CAAC;;AAGhD,aAAO,YAAY,QAAQ,SAAS,IAAI,EAAE,KAAK,CAAC,EAAE,SAAS,SAAQ,MAAM;AACvE,cAAM,OAA0B,EAAE,MAAM,SAAQ;AAChD,eAAO,KAAK,IAAI;AAChB,eAAO,YAAY,IAAI;MACzB,CAAC;IACH;AAdA,YAAA,oBAAA;AAmBA,aAAgB,MAAM,KAAa,eAAsC,CAAA,GAAE;AACzE,aAAO,OAAO,KAAK,YAAY,EAAE;IACnC;AAFA,YAAA,QAAA;AAOA,aAAgB,OAAO,KAAa,eAAsC,CAAA,GAAE;AAC1E,UAAI,CAAC,eAAe,GAAG,GAAG;AACxB,uBAAe,GAAG,IAAI;;AAGxB,cAAO,GAAA,MAAA,UAAS,MAAM,iBAAiB,eAAe,GAAG,GAAG,YAAY,CAAC;IAC3E;AANA,YAAA,SAAA;AAWA,aAAgB,YAAY,KAAa,QAAgB,eAAsC,CAAA,GAAE;AAC/F,aAAO,aAAa,KAAK,QAAQ,YAAY,EAAE;IACjD;AAFA,YAAA,cAAA;AAOA,aAAgB,aACd,KACA,QACA,eAAsC,CAAA,GAAE;AAExC,YAAM,UAAU,OAAO,KAAK,YAAY;AAExC,mBAAa,QAAQ,OAAO,SAAQ;AAEpC,cAAO,GAAA,MAAA,UAAS,MAAM,kBAAiB,GAAA,gBAAA,QAAO,QAAQ,OAAO,QAAQ,QAAQ,IAAI,GAAG,YAAY,CAAC;IACnG;AAVA,YAAA,eAAA;AAeA,aAAgB,oBAAiB;AAC/B,aAAO,QAAQ;IACjB;AAFA,YAAA,oBAAA;AAOA,aAAS,YAAY,EAAE,MAAM,SAAQ,GAAqB;AACxD,UAAI,CAAC,UAAU;AAEb,iBAAS,gBAAgB,aAAa,QAAQ,KAAK,QAAQ,KAAK,GAAG,CAAC;;AAGtE,cAAQ,OAAO;AAEf,iBAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,QAAQ,GAAG;AACnD,uBAAe,GAAG,IAAI;;AAGxB,iBAAW,CAAC,GAAG,KAAK,OAAO,QAAQ,cAAc,GAAG;AAClD,YAAI,CAAC,SAAS,GAAG,GAAG;AAClB,yBAAe,GAAG,IAAI;;;AAI1B,aAAO;IACT;AAKA,aAAe,YAAY,UAAoB,MAAY;;AACzD,cAAM,qBACJ,OAAO,YAAY,eAAe,QAAQ,MAAM,QAAQ,IAAI,2BAA2B;AAEzF,YAAI,QAAO,GAAA,mBAAA,gBAAe,UAAU,IAAI;AAExC,YAAI,gBAAgB,SAAS;AAC3B,cAAI,oBAAoB;AACtB,kBAAM,UAAU,OAAM,GAAA,mBAAA,yBAAwB,SAAS,OAAO,IAAI,EAAE,CAAC;AACrE,kBAAM,WAAW,OAAM,GAAA,mBAAA,yBAAwB,IAAI;AAEnD,mBAAO,IAAI,QAAQ,CAAC,YAClB,QAAQ;cACN,SAAO,OAAA,OAAA,OAAA,OAAA,CAAA,GACF,OAAO,GACP,QAAQ;aAEd,CAAC;;AAIN,iBAAO,IAAI,QAAQ,CAAO,YAAW,UAAA,MAAA,QAAA,QAAA,aAAA;AACnC,mBAAA,QAAQ;cACN,SAAS,OAAM,GAAA,mBAAA,yBAAwB,IAAI;aAC5C;YAAC;;AAIN,YAAI,oBAAoB;AACtB,iBAAO,IAAI,QAAQ,CAAC,YAClB,QAAQ;YACN,SAAO,OAAA,OAAA,OAAA,OAAA,CAAA,GACF,IAAI,IACJ,GAAA,mBAAA,gBAAe,UAAU,OAAO,IAAI,EAAE,CAAC;WAE7C,CAAC;;AAIN,eAAO,IAAI,QAAQ,CAAC,YAAY,QAAQ,EAAE,SAAS,KAAI,CAAE,CAAC;MAC5D,CAAC;;AAKD,aAAS,iBAAiB,SAAiB,cAAoC;AAC7E,YAAM,aAAa,CAAC,MAAM,EAAE,OAAO,CAAC,EAAE,YAAW,IAAK,EAAE,MAAM,CAAC;AAE/D,aAAO,QAAQ,gBAAgB,CAAA,CAAE,EAAE,QAAQ,CAAC,CAAC,KAAK,KAAK,MAAK;AAC1D,gBAAQ,MAAM,SAAQ;AAEtB,kBAAU,QACP,QAAQ,IAAI,GAAG,IAAI,KAAK,EACxB,QAAQ,IAAI,IAAI,YAAW,CAAE,IAAI,MAAM,YAAW,CAAE,EACpD,QAAQ,IAAI,WAAW,GAAG,CAAC,IAAI,WAAW,KAAK,CAAC;MACrD,CAAC;AAED,aAAO;IACT;AAKO,QAAM,QAAQ,MAAW;AAC9B,eAAS,CAAA;AACT,gBAAU;AAEV,iBAAW,CAAC,GAAG,KAAK,OAAO,QAAQ,cAAc,GAAG;AAClD,uBAAe,GAAG,IAAI;;IAE1B;AAPa,YAAA,QAAK;AAYL,YAAA,eAAe;AAKf,YAAA,UAAkB;MAC7B,SAAS,CAAC,KAAK,iBAAmC,CAAA,MAAM;AACtD,kBAAO,OAAA,OAAA,OAAA,OAAA,CAAA,GAAQ,OAAO,GAAK,cAAc;AACzC,YAAI,OAAO,iBAAiB,KAAK,CAAC,KAAa,iBAAwC,MAAM,KAAK,YAAY;AAC9G,YAAI,OAAO,iBAAiB,WAAW,CAAC,KAAa,QAAgB,iBACnE,YAAY,KAAK,QAAQ,YAAY;AACvC,0BAAkB,QAAQ,IAAI;MAChC;;;;",
  "names": []
}
