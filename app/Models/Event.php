<?php
/** Auto-generated by Craftable PRO */

namespace App\Models;

use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\BelongsTo;
use Brackets\CraftablePro\Media\ProcessMediaTrait;
use Brackets\CraftablePro\Media\AutoProcessMediaTrait;
use Brackets\CraftablePro\Media\InteractsWithMedia;
use Spatie\MediaLibrary\HasMedia;
use Spatie\MediaLibrary\MediaCollections\Models\Media;
use Brackets\CraftablePro\Media\HasMediaPreviewsTrait;

class Event extends Model  implements HasMedia {

    use ProcessMediaTrait;
    use AutoProcessMediaTrait;
    use InteractsWithMedia;
    use HasMediaPreviewsTrait;

    protected $table = 'event';
    protected $fillable = ['title', 'content', 'slug', 'published_at', 'club_id', 'category_id'];

    public function category(): BelongsTo
    {
        return $this->belongsTo(\App\Models\Category::class, 'category_id', 'id');
    }


    public function club(): BelongsTo
    {
        return $this->belongsTo(\App\Models\Club::class, 'club_id', 'id');
    }

    public function registerMediaCollections(): void
    {
        $this->addMediaCollection('image');
    }

    public function registerMediaConversions(Media $media = null): void
    {
        $this->autoRegisterPreviews();
    }


protected $casts = [
    ];
}